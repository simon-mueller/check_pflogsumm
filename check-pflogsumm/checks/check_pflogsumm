#!/usr/bin/env python3
# Monitoring check to get mail statistics from postfix's logs via pflogsumm, including performance data
# This check is compatible and tested with Check_MK but might be compatible with other monitoring solutions
# Author: "Simon MÃ¼ller" <github@simon-mueller.de>
# Dependencies: pflogsumm.pl (should be packaged in most distributions as either pflogsumm or postfix-perl-scripts
#
#      1 Postfix log summaries for $DATE
#      2
#      3 Grand Totals
#      4 ------------
#      5 messages
#      6
#      7       X   received
#      8       X   delivered
#      9       X   forwarded
#     10       X   deferred
#     11       X   bounced
#     12       X   rejected (X%)
#     13       X   reject warnings
#     14       X   held
#     15       X   discarded (X%)
#     16
#     17       X   bytes received
#     18       X   bytes delivered
#     19       X   senders
#     20       X   sending hosts/domains
#     21       X   recipients
#     22       X   recipient hosts/domains

import subprocess
import re

returned_output = subprocess.check_output(["pflogsumm", "-d", "yesterday", "--detail", "0", "--bounce-detail", "0", "--deferral-detail", "0", "--reject-detail", "0", "/var/log/mail.log"])
lines=returned_output.decode("utf-8").splitlines()
stats={}
perfdata=""
for index,line in enumerate(lines):
    # parse only section "Grand Totals"
    if index >= 5 and index <= 20:
        stripped_line = line.strip() # get rid of whitespaces before and after relevant parts
        value,space,key = stripped_line.partition("  ") # divide line into integer and name
        if key and value:
				# format lines
                key=key.replace(" ","")
                key=key.replace("/","_")
                key=re.sub("\(.*","", key)
                perfdata+=key + "=" + value.strip() +";0:999999|"
                stats[key.strip()]=value.strip() # use this if you want to implement args for more verbosity

print("P \"Postfix_Stats\"",perfdata.rstrip('|'), "Result is computed from values")
